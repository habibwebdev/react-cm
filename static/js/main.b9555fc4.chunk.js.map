{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","handleDelete","delete","handleClick","e","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","Link","to","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","href","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-hidden","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9555fc4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                // contacts: [...state.contacts, action.payload]\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                // contacts: [...state.contacts, action.payload]\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch : action =>  this.setState(state => reducer(state, action))\r\n     }\r\n    //  asyncronous http request with await example\r\n     async componentDidMount() {\r\n         const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        //  .then(res => this.setState({\r\n        //      contacts: res.data\r\n        //  }));\r\n        this.setState({\r\n            contacts:res.data\r\n        })\r\n     }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n         );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\n// For Typechecking we ll import as fellows\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './contact.css';\r\n\r\nclass Contact extends Component {\r\n\r\n    static propTypes = {\r\n        contact: PropTypes.object.isRequired,\r\n\r\n    }\r\n    state = {\r\n      showContactInfo: false\r\n     };\r\n\r\n  //  asyncronous http request with await example\r\n  handleDelete = async(id, dispatch) => {\r\n    // console.log('hello');\r\n    // console.log(this.state);\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      // .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n\r\n\r\n  };\r\n    handleClick = (e) =>{\r\n      // console.log('hello');\r\n      // console.log(this.state);\r\n      this.setState({\r\n        showContactInfo: !this.state.showContactInfo\r\n      });\r\n    };\r\n    render() {\r\n      const {showContactInfo} = this.state;\r\n      const {id, name, email, phone} = this.props.contact;\r\n\r\n        return (\r\n          <Consumer>\r\n            {value => {\r\n              const {dispatch} = value;\r\n              return <div className=\"card card-body mb-3 shadow-sm\">\r\n                  <h4 className=\"m-0\">\r\n                    {name} <i onClick={this.handleClick} className=\"fas fa-sort-down\" style={{ cursor: \"pointer\" }} />\r\n                    {/* <i onClick={this.handleDelete.bind(this, id, dispatch)} className=\"fas fa-times text-danger float-right\" style={{ cursor: 'pointer' }}></i> */}\r\n                    <i onClick={() => {\r\n                        this.handleDelete(id, dispatch);\r\n                      }} className=\"fas fa-times text-danger float-right\" style={{ cursor: \"pointer\" }} />\r\n                    <Link to={`contact/edit/${id}`}>\r\n                      <i className=\"fas fa-pencil-alt text-dark mr-3 float-right\" style={{ cursor: \"pointer\" }} />\r\n                    </Link>\r\n                  </h4>\r\n                  {showContactInfo ? <ul className=\"list-group\">\r\n                      <li className=\"list-group-item\">\r\n                        Email: {email}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        Phone: {phone}\r\n                      </li>\r\n                    </ul> : null}\r\n                </div>;\r\n            }}\r\n          </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                          <span className=\"text-danger\">\r\n                            Contact\r\n                          </span> List\r\n                        </h1>\r\n                        {contacts.map(contact => {\r\n                          return <Contact key={contact.id} contact={contact} />;\r\n                        })}\r\n                      </React.Fragment>;\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}: </label> {error && <span className=\"invalid-feedback d-inline\">{error}</span>}\r\n            <input onChange={onChange} type={type} name={name} className={classnames('form-control form-control-lg', {'is-invalid': error})} value={value} placeholder={placeholder} />\r\n        </div>\r\n     );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n  // Example of controlled component\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  //  asyncronous http request with await example\r\n  onSubmit = async(dispatch, e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(), we dont need to generate the id so because we are posting to jsonplaceholder.com and they do put auto-generated id ...\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact);\r\n    //   .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n      dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // redirect\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header font-weight-bold\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                {/* <form onSubmit={this.onSubmit.bind(this, dispatch)}> */}\r\n                <form\r\n                  onSubmit={e => {\r\n                    this.onSubmit(dispatch, e);\r\n                  }}\r\n                >\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success btn-block col-md-4 mx-auto\"\r\n                  >\r\n                    Add Contact\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n  // Example of controlled component\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  //  asyncronous http request with await example\r\n  async componentDidMount() {\r\n      const {id} = this.props.match.params;\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone,\r\n      });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  //  asyncronous http request with await example\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n      const updateContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      };\r\n\r\n    const {id} = this.props.match.params;\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // redirect\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header font-weight-bold\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                {/* <form onSubmit={this.onSubmit.bind(this, dispatch)}> */}\r\n                <form\r\n                  onSubmit={e => {\r\n                    this.onSubmit(dispatch, e);\r\n                  }}\r\n                >\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success btn-block col-md-4 mx-auto\"\r\n                  >\r\n                    Update Contact\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n// For Typechecking we ll import as fellows\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <nav className=\"navbar navbar-expand-lg navbar-dark bg-danger mb-3\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" href=\"/\">\r\n            {props.branding}\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  <i className=\"fas fa-home\" /> Home <span className=\"sr-only\">\r\n                    (current)\r\n                  </span>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item ml-4\">\r\n                <Link className=\"nav-link\" to=\"/contact/add\">\r\n                  <i className=\"fas fa-plus\" aria-hidden=\"true\" /> Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item ml-4\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  <i className=\"fas fa-question\" aria-hidden=\"true\" /> About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item ml-4\">\r\n                <Link className=\"nav-link\" to=\"/test\">\r\n                  Test\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>;\r\n      // <div>\r\n      //     <h1 style={{...headingStyle, color:\"red\", fontSize: \"50px\"}}>{props.branding}</h1>\r\n      // </div>\r\n}\r\n\r\n// example of styles object\r\n// const headingStyle = {\r\n//     margin: \"0\"\r\n// }\r\n\r\n// Example of default props\r\nHeader.defaultProps = {\r\n    branding: 'Contact Manager'\r\n}\r\n\r\n// Example of typechecking for props\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <div>\r\n        <h1 className=\"display-4\">\r\n          <span className=\"text-danger\">404</span> Page Not Found\r\n        </h1>\r\n        <p className=\"lead\">Sorry, that page does not exist.</p>\r\n      </div>;\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: '',\r\n     }\r\n    componentDidMount() {\r\n        // console.log('component did mount');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            // .then(data => console.log(data))\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body,\r\n            }))\r\n    }\r\n    //WARNING! To be deprecated in React v17. Use componentDidMount instead.\r\n    // UNSAFE_componentWillMount() {\r\n    //     console.log(\"component will mount\");\r\n    // }\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     console.log(\"component did update\");\r\n    // }\r\n    //WARNING! To be deprecated in React v17. Use componentDidUpdate instead.\r\n    // UNSAFE_componentWillUpdate(nextProps, nextState) {\r\n    //     console.log(\"component will update\");\r\n    // }\r\n    //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\r\n    // UNSAFE_componentWillReceiveProps(nextProps) {\r\n    //     console.log(\"component will recieve props\");\r\n    // }\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return null;\r\n    // }\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log(\"getSnapshotBeforeUpdate\");\r\n    // }\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Contact from './components/Contact'\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/test\";\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n          <Header />\n          <div className=\"container\">\n            {/* <Contacts name=\"John Doe\" email=\"jdoe@me.co\" phone=\"03009412181\" /> */}\n            {/* <AddContact />\n            <Contacts /> */}\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route path=\"/contact/add\" component={AddContact} />\n              <Route path=\"/contact/edit/:id\" component={EditContact} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}